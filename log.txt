[36m2017-11-23 21:08:05.921 UTC [msp] GetLocalMSP -> DEBU 001[0m Returning existing local MSP
[36m2017-11-23 21:08:05.921 UTC [msp] GetDefaultSigningIdentity -> DEBU 002[0m Obtaining default signing identity
2017-11-23 21:08:05.929 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003[0m Using default escc
2017-11-23 21:08:05.930 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004[0m Using default vscc
[36m2017-11-23 21:08:05.932 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 005[0m java chaincode disabled
[36m2017-11-23 21:08:05.933 UTC [chaincodeCmd] upgrade -> DEBU 006[0m Get upgrade proposal for chaincode <name:"mycc" version:"1.1.4" >
[36m2017-11-23 21:08:05.933 UTC [msp/identity] Sign -> DEBU 007[0m Sign: plaintext: 0ACE070A6808031A0C08B5F1DCD00510...424D53500A04657363630A0476736363 
[36m2017-11-23 21:08:05.934 UTC [msp/identity] Sign -> DEBU 008[0m Sign: digest: CBC43609E6C18243E0DADEBD77C38C525BF23C995BB8DB82199C4808C8D67F60 
Error: Error endorsing chaincode: rpc error: code = Unknown desc = chaincode error (status: 500, message: cannot get package for the chaincode to be upgraded (mycc:1.1.4)-open /var/hyperledger/production/chaincodes/mycc.1.1.4: no such file or directory)
Usage:
  peer chaincode upgrade [flags]

Flags:
  -C, --channelID string   The channel on which this command should be executed (default "testchainid")
  -c, --ctor string        Constructor message for the chaincode in JSON format (default "{}")
  -E, --escc string        The name of the endorsement system chaincode to be used for this chaincode
  -l, --lang string        Language the chaincode is written in (default "golang")
  -n, --name string        Name of the chaincode
  -p, --path string        Path to chaincode
  -P, --policy string      The endorsement policy associated to this chaincode
  -v, --version string     Version of the chaincode specified in install/instantiate/upgrade commands
  -V, --vscc string        The name of the verification system chaincode to be used for this chaincode

Global Flags:
      --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string             Ordering service endpoint
      --test.coverprofile string   Done (default "coverage.cov")
      --tls                        Use TLS when communicating with the orderer endpoint
      --transient string           Transient map of arguments in JSON encoding

