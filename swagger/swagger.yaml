swagger: "2.0"
info:
  description: "Uhuchain simple REST API for cars"
  version: "0.0.1"
  title: "Uhuchain Car API"
  termsOfService: "http://uhuchain.com/terms/"
  contact:
    email: "developers@uhuchain.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.uhuchain.com"
basePath: "/v1"
tags:
- name: "car"
  description: "Everything about cars"
  externalDocs:
    description: "Find out more"
    url: "http://uhuchain.com"
- name: "policy"
  description: "Access to policies"
- name: "claim"
  description: "Access to claims"
  externalDocs:
    description: "Find out more about Uhuchain"
    url: "http://uhuchain.com"
schemes:
- "http"
- "https"
paths:
  /status:
    get:
      tags:
      - "status"
      summary: "Get general information about uhuchain"
      description: ""
      operationId: "getStatus"
      produces:
      - "application/json"
      responses:
        200:
          description: "Status Message"
          schema:
            $ref: "#/definitions/ApiResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ApiResponse"
  /cars:
    post:
      tags:
      - "car"
      summary: "Add a new car to the blockchain"
      description: ""
      operationId: "addCar"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Car that should be added to the uhuchain"
        required: true
        schema:
          $ref: "#/definitions/Car"
      responses:
        201:
            description: "New car created"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ApiResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ApiResponse"
  /cars/{id}:
    get:
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: "The car ID"
      tags:
      - "car"
      summary: "Get a car from uhuchain"
      description: ""
      operationId: "getCar"
      produces:
      - "application/json"
      
      responses:
        200:
          description: "Car with the given ID"
          schema:
            $ref: "#/definitions/Car"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ApiResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ApiResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ApiResponse"
  /cars/{id}/policies:
    post:
      tags:
      - "policy"
      summary: "Add a new policy to a car"
      description: ""
      operationId: "addPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: "The car ID"
      - in: "body"
        name: "body"
        description: "Policy that should be added"
        required: true
        schema:
          $ref: "#/definitions/Policy"
      responses:
        201:
          description: "Policy was created"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ApiResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ApiResponse"
  /cars/{carId}/policies/{policyId}/claims:
    post:
      tags:
      - "claim"
      summary: "Add a new claim to a car"
      description: ""
      operationId: "addClaim"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: carId
        required: true
        type: integer
        description: "The car ID"
      - in: path
        name: policyId
        required: true
        type: integer
        description: "The policy ID"
      - in: "body"
        name: "body"
        description: "Claim that should be added"
        required: true
        schema:
          $ref: "#/definitions/Claim"
      responses:
        201:
          description: "Claim was created"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ApiResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ApiResponse"
securityDefinitions:
  carledger_auth:
    type: "oauth2"
    authorizationUrl: "http://uhuchain.com/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify cars in your account"
      read:pets: "read your cars"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Claim:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: "12345"
      date:
        type: "string"
        example: "2016-11-01"
      description:
        type: "string"
        example: "Something bad happend"
    xml:
      name: "Claim"
  Policy:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: "12345"
      insuranceId:
        type: "integer"
        format: "int64"
        example: "12345"
      insuranceName:
        type: "string"
        example: "Zurich Insurance Group"
      startDate:
        type: "string"
        example: "2016-09-01"
      endDate:
        type: "string"
        example: "2017-09-01"
      claims:
        type: "array"
        items:
          $ref: "#/definitions/Claim"
    xml:
      name: "Policy"
  Car:
    type: "object"
    required:
    - "vehicleId"
    - "brand"
    - "model"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: "12345"
      vehicleId:
        type: "string"
        example: "THK34SDM6A2D34"
      model:
        type: "string"
        example: "Golf GTI"
      brand:
        type: "string"
        example: "Volkswagen"
      policies:
        type: "array"
        items:
          $ref: "#/definitions/Policy"
    xml:
      name: "Car"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: "6433"
      type:
        type: "string"
        example: "Error"
      message:
        type: "string"
        example: "Something bad happend"
externalDocs:
  description: "Find out more about uhuchain"
  url: "http://uhuchain.com"