//
// Copyright Uhuchain All Rights Reserved.
//
// SPDX-License-Identifier: Apache-2.0
//

// Code generated by go-swagger; DO NOT EDIT.

package claim

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/uhuchain/uhuchain-api/models"
)

// AddClaimCreatedCode is the HTTP code returned for type AddClaimCreated
const AddClaimCreatedCode int = 201

/*AddClaimCreated Claim was created

swagger:response addClaimCreated
*/
type AddClaimCreated struct {
}

// NewAddClaimCreated creates AddClaimCreated with default headers values
func NewAddClaimCreated() *AddClaimCreated {
	return &AddClaimCreated{}
}

// WriteResponse to the client
func (o *AddClaimCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
}

// AddClaimBadRequestCode is the HTTP code returned for type AddClaimBadRequest
const AddClaimBadRequestCode int = 400

/*AddClaimBadRequest Bad Request

swagger:response addClaimBadRequest
*/
type AddClaimBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddClaimBadRequest creates AddClaimBadRequest with default headers values
func NewAddClaimBadRequest() *AddClaimBadRequest {
	return &AddClaimBadRequest{}
}

// WithPayload adds the payload to the add claim bad request response
func (o *AddClaimBadRequest) WithPayload(payload *models.APIResponse) *AddClaimBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add claim bad request response
func (o *AddClaimBadRequest) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddClaimBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddClaimInternalServerErrorCode is the HTTP code returned for type AddClaimInternalServerError
const AddClaimInternalServerErrorCode int = 500

/*AddClaimInternalServerError Server Error

swagger:response addClaimInternalServerError
*/
type AddClaimInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddClaimInternalServerError creates AddClaimInternalServerError with default headers values
func NewAddClaimInternalServerError() *AddClaimInternalServerError {
	return &AddClaimInternalServerError{}
}

// WithPayload adds the payload to the add claim internal server error response
func (o *AddClaimInternalServerError) WithPayload(payload *models.APIResponse) *AddClaimInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add claim internal server error response
func (o *AddClaimInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddClaimInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
