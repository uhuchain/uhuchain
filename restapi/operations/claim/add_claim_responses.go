// Code generated by go-swagger; DO NOT EDIT.

package claim

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/uhuchain/uhuchain/models"
)

// AddClaimCreatedCode is the HTTP code returned for type AddClaimCreated
const AddClaimCreatedCode int = 201

/*AddClaimCreated Claim was created

swagger:response addClaimCreated
*/
type AddClaimCreated struct {
}

// NewAddClaimCreated creates AddClaimCreated with default headers values
func NewAddClaimCreated() *AddClaimCreated {
	return &AddClaimCreated{}
}

// WriteResponse to the client
func (o *AddClaimCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
}

// AddClaimMethodNotAllowedCode is the HTTP code returned for type AddClaimMethodNotAllowed
const AddClaimMethodNotAllowedCode int = 405

/*AddClaimMethodNotAllowed Invalid input

swagger:response addClaimMethodNotAllowed
*/
type AddClaimMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddClaimMethodNotAllowed creates AddClaimMethodNotAllowed with default headers values
func NewAddClaimMethodNotAllowed() *AddClaimMethodNotAllowed {
	return &AddClaimMethodNotAllowed{}
}

// WithPayload adds the payload to the add claim method not allowed response
func (o *AddClaimMethodNotAllowed) WithPayload(payload *models.APIResponse) *AddClaimMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add claim method not allowed response
func (o *AddClaimMethodNotAllowed) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddClaimMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
