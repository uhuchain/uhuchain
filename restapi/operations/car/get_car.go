//
// Copyright Uhuchain All Rights Reserved.
//
// SPDX-License-Identifier: Apache-2.0
//

// Code generated by go-swagger; DO NOT EDIT.

package car

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetCarHandlerFunc turns a function with the right signature into a get car handler
type GetCarHandlerFunc func(GetCarParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetCarHandlerFunc) Handle(params GetCarParams) middleware.Responder {
	return fn(params)
}

// GetCarHandler interface for that can handle valid get car params
type GetCarHandler interface {
	Handle(GetCarParams) middleware.Responder
}

// NewGetCar creates a new http.Handler for the get car operation
func NewGetCar(ctx *middleware.Context, handler GetCarHandler) *GetCar {
	return &GetCar{Context: ctx, Handler: handler}
}

/*GetCar swagger:route GET /cars/{id} car getCar

Get a car from uhuchain

*/
type GetCar struct {
	Context *middleware.Context
	Handler GetCarHandler
}

func (o *GetCar) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetCarParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
